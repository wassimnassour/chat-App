{"version":3,"sources":["firebase/firebase.js","components/signup/signUp.style.js","components/signup/signUp.jsx","components/signin/signIn.jsx","components/dashboard/dashboard.style.js","components/dashboard/dashboard.jsx","components/chatList/chatList.style.js","components/chatList/chatList.jsx","components/chatView/chatView.style.js","components/chatView/chatView.jsx","components/chatMessageField/chatMessageField.style.js","components/chatMessageField/chatMessageField.jsx","components/newChat/newChat.style.js","components/newChat/newChat.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","SignUpContainer","styled","main","SignUpWrapper","div","InputContainer","SignUp","history","useState","email","setEmail","fullName","setFullName","password","setPassword","error","setError","loading","setLoading","useEffect","onAuthStateChanged","a","_usr","push","CircleToBlockLoading","color","className","type","value","onChange","e","target","required","onClick","preventDefault","length","createUserWithEmailAndPassword","then","res","data","userid","user","uid","collection","doc","set","catch","dbErr","message","SignUpWithEmail","to","SignIn","signInWithEmailAndPassword","err","DashBoardContainer","ChatContainer","selectedChatIndex","width","display","DashBoardWrapper","require","Dashboard","newChatFormVisible","setNewChatFormVisible","chats","setChats","selectedChat","setSelectedChat","media","setMedia","where","onSnapshot","docs","map","_doc","mq","window","matchMedia","WidthChange","matches","addEventListener","removeEventListener","selectedChatList","chatIndex","MessageRead","buildDocKey","friend","sort","join","key","users","filter","messages","sender","update","reciverHasRead","msgSubmit","msg","index","FieldValue","arrayUnion","timestamp","Date","now","goToChat","docKey","usersInChat","split","chat","find","_chat","every","_user","includes","indexOf","submitNewChat","chatObj","sendTo","newChatBtnFn","SelectedChatFn","userEmail","SetConversitionOpenFn","msgSubmitFn","MessageReadFn","toggelNewMessageComponentFn","submitNewChatFn","goToChatFn","ChatListContainer","List","li","selected","background","ListUsers","Button","css","SignoutButton","button","NewMessageButton","ChatList","_index","name","size","round","substring","userIsSender","signOut","ChatViewContainer","ToolBar","ChatContent","Message","ChatView","container","document","getElementById","scrollTo","scrollHeight","id","_msg","MessageFieldContainer","ChatMessageField","setMessage","submit","placeholder","onKeyDown","event","keyCode","Container","ButtonSubmit","NewChatComponents","userName","setUserName","Error","console","log","currentUser","userExists","get","UserSnapShot","exists","chatExists","onSubmit","htmlFor","App","ReactDOM","render","StrictMode","path","component"],"mappings":"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","file":"static/js/main.26af375a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA07sf8pk82B8GOqC4j3cEwWAwncJpkF2U\",\n  authDomain: \"chat-app-7f5ca.firebaseapp.com\",\n  databaseURL: \"https://chat-app-7f5ca.firebaseio.com\",\n  projectId: \"chat-app-7f5ca\",\n  storageBucket: \"chat-app-7f5ca.appspot.com\",\n  messagingSenderId: \"385627342549\",\n  appId: \"1:385627342549:web:294c1ebc1c193e2945c45c\",\n  measurementId: \"G-JW1D4EVD50\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase.firestore();\nexport const auth = firebase.auth();\n","import styled from \"styled-components\";\n\nexport const SignUpContainer = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n`;\nexport const SignUpWrapper = styled.div`\n  width: 350px;\n  height: auto;\n  box-shadow: 0 0 2px 0 #6f6f6fcc;\n  padding: 2rem;\n\n  h1 {\n    font-size: 24px;\n    text-align: center;\n  }\n  form {\n    margin: 44px 0 20px;\n  }\n  button {\n    background: #0f4c75;\n    border: none;\n    width: 100%;\n    margin: 0 auto;\n    color: white;\n    font-size: 20px;\n    padding: 10px;\n    display: flex;\n    justify-content: center;\n    border-radius: 5px;\n  }\n  span {\n    margin: 23px 0 10px;\n    display: block;\n    a {\n      text-decoration: none;\n      color: #122850;\n      font-weight: bold;\n    }\n  }\n  .danger {\n    color: red;\n    text-align: center;\n  }\n`;\nexport const InputContainer = styled.div`\n  margin: 12px 0;\n  display: flex;\n  flex-direction: column;\n  label {\n    margin: 7px 0 3px;\n  }\n  input {\n    outline: none;\n    height: 29px;\n    font-size: 16px;\n    padding: 3px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { BoxLoading } from \"react-loadingg\";\n\nimport { Link } from \"react-router-dom\";\nimport { auth, db } from \"../../firebase/firebase\";\nimport { SignUpContainer, SignUpWrapper, InputContainer } from \"./signUp.style\";\n\nconst SignUp = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (_usr) => {\n      if (_usr) {\n        history.push(\"/dashboard\");\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n  const SignUpWithEmail = (e) => {\n    e.preventDefault(); // This is to prevent the automatic refreshing of the page on submit.\n    if (email.length > 0 && password.length > 0 && fullName.length > 0) {\n      setLoading(true);\n      auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((res) => {\n          const id = res.user.uid;\n\n          const data = {\n            userid: id,\n            email,\n            password,\n            fullName,\n          };\n          db.collection(\"users\")\n            .doc(email)\n            .set(data)\n            .then(() => {\n              history.push(\"/dashboard\");\n              setLoading(false);\n            })\n            .catch((dbErr) => {\n              setError(dbErr.message);\n              setLoading(false);\n            });\n        })\n        .catch((error) => {\n          setError(error.message);\n          setLoading(false);\n        });\n    } else {\n      setError(\"something went wrong \");\n    }\n  };\n\n  return (\n    <>\n      {!loading ? (\n        <SignUpContainer>\n          <SignUpWrapper>\n            <h1>Sign Up</h1>\n\n            <form>\n              {error ? (\n                <div>\n                  <span className=\"danger\">{error}</span>\n                </div>\n              ) : null}\n\n              <InputContainer>\n                <label>FullName:</label>\n                <input\n                  type=\"text\"\n                  value={fullName}\n                  onChange={(e) => setFullName(e.target.value)}\n                  required\n                />\n              </InputContainer>\n              <InputContainer>\n                <label>Email:</label>\n                <input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </InputContainer>\n              <InputContainer>\n                <label>Password:</label>\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </InputContainer>\n            </form>\n\n            <button type=\"submit\" onClick={(e) => SignUpWithEmail(e)}>\n              Sign Up\n            </button>\n            <span>\n              if you have account <Link to=\"/signin\">Sign In</Link>\n            </span>\n          </SignUpWrapper>\n        </SignUpContainer>\n      ) : (\n        <BoxLoading CircleToBlockLoading color=\"#0f4c75\" />\n      )}\n    </>\n  );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from \"react\";\nimport { BoxLoading } from \"react-loadingg\";\n\nimport {\n  SignUpContainer,\n  SignUpWrapper,\n  InputContainer,\n} from \"../signup/signUp.style\";\nimport { auth } from \"../../firebase/firebase\";\nimport { Link } from \"react-router-dom\";\n\nconst SignIn = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (_usr) => {\n      if (_usr) {\n        history.push(\"/dashboard\");\n      } else {\n        setLoading(false);\n      }\n    });\n  }, [history]);\n\n  const submit = () => {\n    if (email.length > 0 && password.length > 0) {\n      setLoading(true);\n\n      auth\n        .signInWithEmailAndPassword(email, password)\n        .then(() => {\n          history.push(\"/dashboard\");\n        })\n        .catch((err) => {\n          setLoading(false);\n\n          setError(err.message);\n        });\n    } else {\n      setLoading(false);\n      setError(\"something went wrong \");\n    }\n  };\n\n  return (\n    <SignUpContainer>\n      {!loading ? (\n        <SignUpWrapper>\n          <h1>Sign In</h1>\n          <form>\n            {error ? (\n              <div>\n                <span className=\"danger\">{error}</span>\n              </div>\n            ) : null}\n            <InputContainer>\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </InputContainer>\n            <InputContainer>\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </InputContainer>\n          </form>\n          <button type=\"submit\" onClick={() => submit()}>\n            Sign In\n          </button>\n          <span>\n            if you have don't have account <Link to=\"/signup\">Sign Up</Link>\n          </span>\n        </SignUpWrapper>\n      ) : (\n        <BoxLoading CircleToBlockLoading color=\"#0f4c75\" />\n      )}\n    </SignUpContainer>\n  );\n};\n\nexport default SignIn;\n","import styled from \"styled-components\";\n\nexport const DashBoardContainer = styled.main`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n\tbackground: #eeeeeea6;\n`;\n\nexport const ChatContainer = styled.div`\n\twidth: 70%;\n\tposition: relative;\n\n\t@media (min-width: 650px) and (max-width: 800px) {\n\t\twidth: 64%;\n\t}\n\t@media (max-width: 650px) {\n\t\t${({ selectedChatIndex }) =>\n\t\t\tselectedChatIndex !== null\n\t\t\t\t? { width: \"100%\" }\n\t\t\t\t: { display: \"none\" }};\n\t}\n`;\n\nexport const DashBoardWrapper = styled.div`\n\tbackground: #fff;\n\twidth: 78%;\n\theight: 78%;\n\tborder-radius: 16px;\n\tmax-width: 1100px;\n\tbox-shadow: 0 0 15px 1px #6464646e;\n\tdisplay: flex;\n\toverflow: hidden;\n\tposition: relative;\n\n\t@media (max-width: 1000px) {\n\t\twidth: 90%;\n\t}\n\t@media (max-width: 700px) {\n\t\twidth: 95%;\n\t\tborder-radius: 8px;\n\t}\n\t@media (max-width: 550px) {\n\t\twidth: 100%;\n\t\tmargin: 6px;\n\t\tborder-radius: 0;\n\t} ;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { BoxLoading } from \"react-loadingg\";\nimport {\n\tDashBoardContainer,\n\tDashBoardWrapper,\n\tChatContainer,\n} from \"./dashboard.style\";\nimport {\n\tChatList,\n\tChatView,\n\tChatMessageField,\n\tNewChatComponents,\n} from \"../index\";\nimport { auth, db } from \"../../firebase/firebase\";\nconst firebase = require(\"firebase\");\n\nconst Dashboard = ({ history }) => {\n\tconst [email, setEmail] = useState(null);\n\tconst [newChatFormVisible, setNewChatFormVisible] = useState(true);\n\tconst [chats, setChats] = useState([]);\n\tconst [selectedChat, setSelectedChat] = useState(null);\n\tconst [media, setMedia] = useState(null);\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged(async (_usr) => {\n\t\t\t//check if user alerady singin\n\t\t\tif (!_usr) {\n\t\t\t\thistory.push(\"/signin\");\n\t\t\t} else {\n\t\t\t\t//fetch all converstions of a user\n\t\t\t\tawait db\n\t\t\t\t\t.collection(\"chats\")\n\t\t\t\t\t.where(\"users\", \"array-contains\", _usr.email)\n\t\t\t\t\t.onSnapshot(async (res) => {\n\t\t\t\t\t\tconst chats = await res.docs.map((_doc) => _doc.data());\n\t\t\t\t\t\tsetEmail(_usr.email);\n\t\t\t\t\t\tsetChats(chats);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t//add Event Listener for Media querie\n\t\tconst mq = window.matchMedia(\"(max-width: 650px)\");\n\t\tmq.addEventListener(\"change\", WidthChange);\n\t\tWidthChange(mq);\n\t\t// media query change\n\t\tfunction WidthChange(mq) {\n\t\t\tif (mq.matches) {\n\t\t\t\tsetMedia(true);\n\t\t\t\tsetNewChatFormVisible(false);\n\t\t\t} else {\n\t\t\t\tsetMedia(false);\n\t\t\t\tsetNewChatFormVisible(true);\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\t//remove EventListener\n\t\t\tmq.removeEventListener(\"change\", WidthChange);\n\t\t};\n\t}, [history]);\n\n\t//select a chat\n\tconst selectedChatList = async (chatIndex) => {\n\t\tawait setSelectedChat(chatIndex);\n\t\tsetNewChatFormVisible(false);\n\t\tawait MessageRead(chatIndex);\n\t};\n\n\t//for show New message components\n\tconst newChatBtnClicked = () => {\n\t\tsetNewChatFormVisible(!newChatFormVisible);\n\t};\n\t// build Doc Id\n\tconst buildDocKey = (friend) => [email, friend].sort().join(\":\");\n\n\t//if user See Message\n\tconst MessageRead = (selectedChat) => {\n\t\tconst key = buildDocKey(\n\t\t\tchats[selectedChat].users.filter((_usr) => _usr !== email)[0]\n\t\t);\n\n\t\tconst userSender =\n\t\t\tchats[selectedChat].messages[\n\t\t\t\tchats[selectedChat].messages.length - 1\n\t\t\t].sender !== email;\n\t\tif (userSender) {\n\t\t\tdb.collection(\"chats\").doc(key).update({\n\t\t\t\treciverHasRead: true,\n\t\t\t});\n\t\t}\n\t};\n\t//submit Message\n\tconst msgSubmit = (msg, index) => {\n\t\tconst key = buildDocKey(\n\t\t\tchats[index].users.filter((_usr) => _usr !== email)[0]\n\t\t);\n\n\t\tif (msg.length > 0) {\n\t\t\tdb.collection(\"chats\")\n\t\t\t\t.doc(key)\n\t\t\t\t.update({\n\t\t\t\t\tmessages: firebase.firestore.FieldValue.arrayUnion({\n\t\t\t\t\t\tsender: email,\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\ttimestamp: Date.now(),\n\t\t\t\t\t}),\n\t\t\t\t\treciverHasRead: false,\n\t\t\t\t});\n\t\t}\n\t};\n\t//if i alerady tolk to this friend\n\tconst goToChat = async (docKey, msg) => {\n\t\tconst usersInChat = docKey.split(\":\");\n\t\tconst chat = chats.find((_chat) =>\n\t\t\tusersInChat.every((_user) => _chat.users.includes(_user))\n\t\t);\n\t\tsetNewChatFormVisible(false);\n\t\tawait setSelectedChat(chats.indexOf(chat));\n\t\tawait msgSubmit(msg, chats.indexOf(chat));\n\t};\n\n\t//New Friend Chat\n\n\tconst submitNewChat = async (chatObj) => {\n\t\tconst docKey = buildDocKey(chatObj.sendTo);\n\t\tawait db\n\t\t\t.collection(\"chats\")\n\t\t\t.doc(docKey)\n\t\t\t.set({\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n\t\t\t\t\t\tsender: email,\n\t\t\t\t\t\tmessage: chatObj.msg,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tusers: [email, chatObj.sendTo],\n\t\t\t\treciverHasRead: false,\n\t\t\t});\n\t\tsetNewChatFormVisible(!newChatFormVisible);\n\t\tif (chats.length > 0) {\n\t\t\tsetSelectedChat(chats.length - 1);\n\t\t}\n\t};\n\t// for Back to list Of users\n\tconst SetConversitionOpen = () => {\n\t\tsetSelectedChat(null);\n\t};\n\n\t// hidde Newchat Component\n\tconst toggelNewMessageComponent = () => {\n\t\tsetNewChatFormVisible(false);\n\t};\n\treturn (\n\t\t<>\n\t\t\t{email ? (\n\t\t\t\t<DashBoardContainer>\n\t\t\t\t\t<DashBoardWrapper>\n\t\t\t\t\t\t{newChatFormVisible && media ? null : (\n\t\t\t\t\t\t\t<ChatList\n\t\t\t\t\t\t\t\tnewChatBtnFn={newChatBtnClicked}\n\t\t\t\t\t\t\t\tSelectedChatFn={selectedChatList}\n\t\t\t\t\t\t\t\tchats={chats}\n\t\t\t\t\t\t\t\tuserEmail={email}\n\t\t\t\t\t\t\t\tselectedChatIndex={selectedChat}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{newChatFormVisible ? null : (\n\t\t\t\t\t\t\t<ChatContainer selectedChatIndex={selectedChat}>\n\t\t\t\t\t\t\t\t<ChatView\n\t\t\t\t\t\t\t\t\tuserEmail={email}\n\t\t\t\t\t\t\t\t\tselectedChat={selectedChat}\n\t\t\t\t\t\t\t\t\tchat={chats}\n\t\t\t\t\t\t\t\t\tSetConversitionOpenFn={SetConversitionOpen}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{selectedChat !== null ? (\n\t\t\t\t\t\t\t\t\t<ChatMessageField\n\t\t\t\t\t\t\t\t\t\tmsgSubmitFn={msgSubmit}\n\t\t\t\t\t\t\t\t\t\tMessageReadFn={MessageRead}\n\t\t\t\t\t\t\t\t\t\tselectedChat={selectedChat}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</ChatContainer>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{newChatFormVisible ? (\n\t\t\t\t\t\t\t<NewChatComponents\n\t\t\t\t\t\t\t\ttoggelNewMessageComponentFn={\n\t\t\t\t\t\t\t\t\ttoggelNewMessageComponent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsubmitNewChatFn={submitNewChat}\n\t\t\t\t\t\t\t\tgoToChatFn={goToChat}\n\t\t\t\t\t\t\t\tnewChatFormVisible={newChatFormVisible}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</DashBoardWrapper>\n\t\t\t\t</DashBoardContainer>\n\t\t\t) : (\n\t\t\t\t<BoxLoading CircleToBlockLoading color=\"#0f4c75\" />\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Dashboard;\n","import styled, { css } from \"styled-components\";\n\nexport const ChatListContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 40%;\n\tposition: relative;\n\tborder-right: 1px solid #62626233;\n\tbackground: #0f4c75;\n\n\t@media (max-width: 800px) {\n\t\twidth: 43%;\n\t}\n\t@media (max-width: 650px) {\n\t\t${({ selectedChatIndex }) =>\n\t\t\tselectedChatIndex !== null\n\t\t\t\t? { display: \"none\" }\n\t\t\t\t: { width: \"100%\" }}\n\t}\n`;\nexport const List = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-bottom: 1px solid #fffbfb17;\n\tpadding: 12px 0px 12px 5px;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: center;\n\t${({ selected }) => selected && { background: \"#156296cf\" }}}\n\t.contact {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\twidth: 88%;\n\n\t\t.user {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tfont-weight: bold;\n\t\t\t.Name {\n\t\t\t\tfont-weight: bold;\n\t\t\t\tmargin: 4px 0;\n\t\t\t\tcolor: white;\n\t\t\t\t    word-break: break-word;\n\t\t\t}\n\t\t\t.last_message {\n\t\t\t\tfont-weight: 400;\n\n\t\t\t\tcolor: #d1d8d8;\n\t\t\t}\n\t\t}\n\t\t.avatar {\n\t\t\theight: 60px;\n\t\t\tmargin-right: 12px;\n\t\t}\n\t}\n\t.Notifications {\n\t\tcolor: red;\n\t\tfont-size: 25px;\n\t\tpadding: 0 6px 0;\n\t}\n`;\nexport const ListUsers = styled.div`\n\toverflow-y: auto;\n\toverflow-x: hidden;\n`;\n\nconst Button = css`\n\tborder: none;\n\tcolor: white;\n\tfont-weight: Bold;\n\twidth: 100%;\n\tletter-spacing: 1px;\n\tdisplay: flex;\n\theight: 50px;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground: transparent;\n`;\nexport const SignoutButton = styled.button`\n\t${Button}\n\tposition: absolute;\n\tbottom: 0;\n\tleft: 0;\n\tborder-top: 1px solid gray;\n\tbackground: #0f4c75;\n\tz-index: 12;\n`;\nexport const NewMessageButton = styled.button`\n\t${Button}\n\tborder-bottom:1px solid gray;\n`;\n","import React from \"react\";\nimport Avatar from \"react-avatar\";\nimport { MdNotifications, MdAddCircle } from \"react-icons/md\";\n\nimport {\n\tChatListContainer,\n\tList,\n\tSignoutButton,\n\tNewMessageButton,\n\tListUsers,\n} from \"./chatList.style\";\nimport { auth } from \"../../firebase/firebase\";\nconst ChatList = ({\n\tnewChatBtnFn,\n\tSelectedChatFn,\n\tchats,\n\tuserEmail,\n\tselectedChatIndex,\n}) => {\n\t//check who send last message\n\tconst userIsSender = (chat) =>\n\t\tchat.messages[chat.messages.length - 1].sender !== userEmail;\n\n\treturn (\n\t\t<ChatListContainer selectedChatIndex={selectedChatIndex}>\n\t\t\t{chats ? (\n\t\t\t\t<>\n\t\t\t\t\t<NewMessageButton onClick={newChatBtnFn}>\n\t\t\t\t\t\tNew chat <MdAddCircle />\n\t\t\t\t\t</NewMessageButton>\n\t\t\t\t\t<ListUsers>\n\t\t\t\t\t\t{chats.map((chat, _index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\tselected={selectedChatIndex === _index}\n\t\t\t\t\t\t\t\t\tkey={_index}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tSelectedChatFn(_index);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"contact\">\n\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\tname={\n\t\t\t\t\t\t\t\t\t\t\t\tchat.users.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t(user) => user !== userEmail\n\t\t\t\t\t\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"45\"\n\t\t\t\t\t\t\t\t\t\t\tround={true}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"avatar\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"user\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"Name\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tchat.users.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(user) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser !== userEmail\n\t\t\t\t\t\t\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"last_message\">\n\t\t\t\t\t\t\t\t\t\t\t\t{chat.messages[\n\t\t\t\t\t\t\t\t\t\t\t\t\tchat.messages.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t].message.substring(0, 25) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"....\"}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t{userIsSender(chat) &&\n\t\t\t\t\t\t\t\t\t\tchat.reciverHasRead === false ? (\n\t\t\t\t\t\t\t\t\t\t\t<MdNotifications className=\"Notifications\" />\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ListUsers>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<NewMessageButton onClick={newChatBtnFn}>\n\t\t\t\t\tNew chate\n\t\t\t\t</NewMessageButton>\n\t\t\t)}\n\t\t\t<SignoutButton onClick={() => auth.signOut()} className=\"signOut\">\n\t\t\t\tSign out\n\t\t\t</SignoutButton>\n\t\t</ChatListContainer>\n\t);\n};\nexport default ChatList;\n","import styled from \"styled-components\";\n\nexport const ChatViewContainer = styled.div`\n\twidth: 100%;\n\n\theight: 100%;\n`;\nexport const ToolBar = styled.div`\n\twidth: 100%;\n\tfont-size: 15px;\n\n\tfont-weight: Bold;\n\tfont-weight: 500;\n\tletter-spacing: 1px;\n\theight: 50px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbox-shadow: 0 0 2px grey;\n\tcolor: black;\n\t/*display: flex;\n\tjustify-content: space-between;\n\talign-items: center;*/\n\tpadding: 0 8px;\n\tbutton {\n\t\tdisplay: none;\n\t}\n\t@media (max-width: 650px) {\n\t\tbutton {\n\t\t\tborder: none;\n\t\t\tbackground: transparent;\n\t\t\tcolor: #0f4c75;\n\t\t\tfont-size: 19px;\n\t\t\tdisplay: flex;\n\t\t\tposition: absolute;\n\t\t\tleft: 4%;\n\t\t}\n\t}\n`;\nexport const ChatContent = styled.div`\n\tmargin: 1rem 0;\n\toverflow-y: scroll;\n\theight: 80%;\n\toverflow-x: hidden;\n`;\nexport const Message = styled.div`\n\t&.friend {\n\t\tdisplay: flex;\n\n\t\tjustify-content: flex-end;\n\t\tmargin-right: 35px;\n\t\tspan {\n\t\t\tbackground: #0f4c75;\n\t\t}\n\t}\n\t&.sender {\n\t\tmargin-left: 35px;\n\t\tspan {\n\t\t\tbackground: #a9a6a6;\n\t\t}\n\t}\n\tspan {\n\t\tbackground: #3d5bf9;\n\t\tdisplay: inline-block;\n\t\tpadding: 8px;\n\t\tcolor: white;\n\t\tborder-radius: 6px;\n\t\tmargin: 10px 0;\n\t\tmax-width: 50%;\n\t}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { MdBackspace } from \"react-icons/md\";\nimport { db } from \"../../firebase/firebase\";\nimport {\n\tChatViewContainer,\n\tToolBar,\n\tChatContent,\n\tMessage,\n} from \"./chatView.style\";\nconst ChatView = ({ chat, userEmail, selectedChat, SetConversitionOpenFn }) => {\n\tuseEffect(() => {\n\t\t// scroll to last message\n\t\tconst container = document.getElementById(\"chatview-container\");\n\t\tif (container) {\n\t\t\tcontainer.scrollTo(0, container.scrollHeight);\n\t\t}\n\t}, [chat, selectedChat]);\n\n\treturn (\n\t\t<>\n\t\t\t{selectedChat !== null ? (\n\t\t\t\t<ChatViewContainer selectedChat={selectedChat}>\n\t\t\t\t\t<ToolBar>\n\t\t\t\t\t\t<button onClick={() => SetConversitionOpenFn()}>\n\t\t\t\t\t\t\t<MdBackspace />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tchat[selectedChat].users.filter(\n\t\t\t\t\t\t\t\t\t(_usr) => _usr !== userEmail\n\t\t\t\t\t\t\t\t)[0]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</ToolBar>\n\t\t\t\t\t<ChatContent id=\"chatview-container\">\n\t\t\t\t\t\t{chat[selectedChat].messages.map((_msg, _index) => (\n\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t_msg.sender === userEmail\n\t\t\t\t\t\t\t\t\t\t? \"sender\"\n\t\t\t\t\t\t\t\t\t\t: \"friend\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkey={_index}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span>{_msg.message}</span>\n\t\t\t\t\t\t\t</Message>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ChatContent>\n\t\t\t\t</ChatViewContainer>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n\nexport default ChatView;\n","import styled from \"styled-components\";\n\nexport const MessageFieldContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 85%;\n\tdisplay: flex;\n\ttransform: translateX(-50%);\n\tleft: 50%;\n\n\tborder-radius: 20px;\n\tborder: 1px solid #0f4c75;\n\tmargin-bottom: 6px;\n\talign-items: center;\n\tpadding: 1px;\n\tjustify-content: space-between;\n\tinput {\n\t\t/*\t\tflex-basis: 95%;\n*/\n\t\tpadding: 0 6px;\n\t\theight: 38px;\n\t\tborder-radius: 20px;\n\t\tpadding: 0 1rem;\n\t\tborder: none;\n\t\toutline: none;\n\t}\n\tbutton {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\t/*\t\tflex-basis: 5%;\n/*\n\tborder-radius: 20px;\n*/\n\t\t/*\t\tpadding: 0 1rem;\n*/\n\t\tborder: none;\n\n\t\tfont-size: 22px;\n\t\tbackground: transparent;\n\t\tcolor: #0f4c75;\n\t\toutline: none;\n\t}\n\t@media (max-width: 650px) {\n\t\twidth: 91%;\n\t}\n`;\n","import React, { useState } from \"react\";\nimport { MdSend } from \"react-icons/md\";\nimport { MessageFieldContainer } from \"./chatMessageField.style\";\nconst ChatMessageField = ({ msgSubmitFn, MessageReadFn, selectedChat }) => {\n\tconst [message, setMessage] = useState(\"\");\n\t//submit a message\n\tconst submit = (message, selectedChat) => {\n\t\tmsgSubmitFn(message, selectedChat);\n\t\tsetMessage(\"\");\n\t};\n\n\treturn (\n\t\t<MessageFieldContainer>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Type Your message \"\n\t\t\t\tvalue={message}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetMessage(e.target.value);\n\t\t\t\t}}\n\t\t\t\tonClick={() => MessageReadFn(selectedChat)}\n\t\t\t\tonKeyDown={(event) =>\n\t\t\t\t\tevent.keyCode === 13 && submit(message, selectedChat)\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tsubmit(message, selectedChat);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MdSend />\n\t\t\t</button>\n\t\t</MessageFieldContainer>\n\t);\n};\n\nexport default ChatMessageField;\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n\twidth: 55%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\t.backButton {\n\t\tdisplay: none;\n\t}\n\t.danger {\n\t\tcolor: red;\n\t\ttext-align: center;\n\t}\n\th2 {\n\t\ttext-align: center;\n\t}\n\tform {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 71%;\n\t\tmargin: 0 auto;\n\t\tmargin-top: 9px;\n\t\tlabel {\n\t\t\tmargin: 4px 0 7px;\n\t\t}\n\t\tinput {\n\t\t\tmargin: 4px 0 7px;\n\t\t\theight: 31px;\n\t\t\toutline: none;\n\t\t\tpadding: 4px;\n\t\t}\n\t\ttextarea {\n\t\t\tresize: none;\n\t\t\tmin-height: 106px;\n\t\t\toverflow: auto;\n\t\t\tpadding: 6px;\n\t\t\toutline: none;\n\t\t}\n\t}\n\n\t@media (max-width: 650px) {\n\t\t${({ newChatFormVisible }) =>\n\t\t\tnewChatFormVisible ? { width: \"100%\" } : { width: \"60%\" }}\n\t\twidth: 100%;\n\t\tform {\n\t\t\twidth: 80%;\n\t\t}\n\t\t.backButton {\n\t\t\tborder: none;\n\t\t\tbackground: transparent;\n\t\t\tcolor: #0f4c75;\n\t\t\tfont-size: 30px;\n\t\t\tdisplay: flex;\n\t\t\tposition: absolute;\n\t\t\tleft: 4%;\n\t\t\ttop: 4%;\n\t\t}\n\t}\n`;\n\nexport const ButtonSubmit = styled.button`\n\tbackground: #0f4c75;\n\tborder: none;\n\tcolor: white;\n\tfont-weight: Bold;\n\twidth: 100%;\n\tletter-spacing: 1px;\n\tdisplay: flex;\n\theight: 50px;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 6px;\n\tfont-size: 17px;\n\tmargin-top: 15px;\n`;\n","import React, { useState } from \"react\";\nimport { db, auth } from \"../../firebase/firebase\";\nimport { Container, ButtonSubmit } from \"./newChat.style\";\nimport { MdBackspace } from \"react-icons/md\";\n\nconst NewChatComponents = ({\n\tsubmitNewChatFn,\n\tgoToChatFn,\n\tnewChatFormVisible,\n\ttoggelNewMessageComponentFn,\n}) => {\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [message, setMessage] = useState(\"\");\n\tconst [Error, setError] = useState(null);\n\tconsole.log(Error);\n\tconst buildDocKey = () =>\n\t\t[auth.currentUser.email, userName].sort().join(\":\");\n\n\tconst userExists = async () => {\n\t\tconst UserSnapShot = await db.collection(\"users\").get();\n\t\tconst exists = await UserSnapShot.docs\n\t\t\t.map((_user) => _user.data().email)\n\t\t\t.includes(userName);\n\t\treturn exists;\n\t};\n\tconst chatExists = async () => {\n\t\tconst docKey = buildDocKey();\n\t\tconst chat = await db.collection(\"chats\").doc(docKey).get();\n\t\treturn chat.exists;\n\t};\n\n\tconst submit = async (e) => {\n\t\te.preventDefault();\n\t\tconst key = buildDocKey();\n\t\tconst user = await userExists();\n\t\tif (user) {\n\t\t\tconst chat = await chatExists();\n\t\t\tchat\n\t\t\t\t? goToChatFn(key, message)\n\t\t\t\t: submitNewChatFn({ sendTo: userName, msg: message });\n\t\t} else {\n\t\t\tsetError(\"Account does not exist\");\n\t\t}\n\t};\n\tconsole.log(newChatFormVisible);\n\treturn (\n\t\t<Container newChatFormVisible={newChatFormVisible}>\n\t\t\t<button\n\t\t\t\tonClick={() => toggelNewMessageComponentFn()}\n\t\t\t\tclassName=\"backButton\"\n\t\t\t>\n\t\t\t\t<MdBackspace />\n\t\t\t</button>\n\t\t\t<h2>Send A Message!</h2>\n\t\t\t{Error ? <span className=\"danger\">{Error}</span> : null}\n\t\t\t<form onSubmit={submit}>\n\t\t\t\t<label htmlFor=\"new-chat-username\">\n\t\t\t\t\tEnter Your Friend's Email\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"new-chat-username\"\n\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t/>\n\n\t\t\t\t<label htmlFor=\"new-chat-username\">Enter Your Message</label>\n\t\t\t\t<textarea\n\t\t\t\t\trequired\n\t\t\t\t\tid=\"new-chat-message\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetMessage(e.target.value);\n\t\t\t\t\t\tsetError(null);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<ButtonSubmit type=\"submit\" onClick={() => submit}>\n\t\t\t\t\tSend\n\t\t\t\t</ButtonSubmit>\n\t\t\t</form>\n\t\t</Container>\n\t);\n};\n\nexport default NewChatComponents;\n","import React, { useEffect } from \"react\";\nimport { auth } from \"./firebase/firebase\";\nimport \"./App.css\";\n\nfunction App({ history }) {\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged(async (_usr) => {\n\t\t\t//check if user alerady singin\n\t\t\tif (!_usr) {\n\t\t\t\thistory.push(\"/signin\");\n\t\t\t} else {\n\t\t\t\thistory.push(\"/dashboard\");\n\t\t\t}\n\t\t});\n\t}, [history]);\n\n\treturn <></>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport { SignUp, SignIn, Dashboard } from \"./components/index\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Route path=\"/\" component={App} />\n\t\t\t<Route path=\"/signup\" component={SignUp} />\n\t\t\t<Route path=\"/signin\" component={SignIn} />\n\t\t\t<Route path=\"/dashboard\" component={Dashboard} />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}